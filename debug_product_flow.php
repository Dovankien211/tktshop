<?php
/**
 * DEBUG TO√ÄN B·ªò FLOW S·∫¢N PH·∫®M
 * T·∫°o file n√†y: tktshop/debug_product_flow.php (th∆∞ m·ª•c g·ªëc)
 */

error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h1>üîç DEBUG TO√ÄN B·ªò FLOW S·∫¢N PH·∫®M</h1>";
echo "<p><strong>Th·ªùi gian:</strong> " . date('Y-m-d H:i:s') . "</p>";
echo "<hr>";

// 1. Ki·ªÉm tra k·∫øt n·ªëi database
echo "<h2>1. üóÑÔ∏è KI·ªÇM TRA DATABASE</h2>";
try {
    require_once 'config/config.php';
    require_once 'config/database.php';
    
    $pdo = Database::getInstance()->getConnection();
    echo "‚úÖ <span style='color:green;'>Database connected successfully</span><br>";
    
    // Th√¥ng tin database
    $db_info = $pdo->query("SELECT DATABASE() as db_name")->fetch();
    echo "üìä Database name: <strong>" . $db_info['db_name'] . "</strong><br>";
    
} catch (Exception $e) {
    echo "‚ùå <span style='color:red;'>Database error: " . $e->getMessage() . "</span><br>";
    die("Cannot continue without database");
}
echo "<hr>";

// 2. Ki·ªÉm tra c·∫•u tr√∫c b·∫£ng
echo "<h2>2. üìã KI·ªÇM TRA C·∫§U TR√öC B·∫¢NG</h2>";
$tables = ['categories', 'products', 'users'];

foreach ($tables as $table) {
    try {
        $stmt = $pdo->query("DESCRIBE $table");
        $columns = $stmt->fetchAll(PDO::FETCH_ASSOC);
        echo "<h3>üìù B·∫£ng: <code>$table</code></h3>";
        echo "<table border='1' cellpadding='5' style='border-collapse:collapse;'>";
        echo "<tr style='background:#f0f0f0;'><th>Column</th><th>Type</th><th>Null</th><th>Key</th><th>Default</th></tr>";
        foreach ($columns as $col) {
            echo "<tr>";
            echo "<td>" . $col['Field'] . "</td>";
            echo "<td>" . $col['Type'] . "</td>";
            echo "<td>" . $col['Null'] . "</td>";
            echo "<td>" . $col['Key'] . "</td>";
            echo "<td>" . $col['Default'] . "</td>";
            echo "</tr>";
        }
        echo "</table><br>";
        
        // ƒê·∫øm s·ªë l∆∞·ª£ng records
        $count_stmt = $pdo->query("SELECT COUNT(*) FROM $table");
        $count = $count_stmt->fetchColumn();
        echo "üìä <strong>T·ªïng s·ªë records:</strong> $count<br><br>";
        
    } catch (Exception $e) {
        echo "‚ùå <span style='color:red;'>L·ªói b·∫£ng $table: " . $e->getMessage() . "</span><br><br>";
    }
}
echo "<hr>";

// 3. Ki·ªÉm tra d·ªØ li·ªáu s·∫£n ph·∫©m
echo "<h2>3. üõçÔ∏è KI·ªÇM TRA D·ªÆ LI·ªÜU S·∫¢N PH·∫®M</h2>";
try {
    // L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
    $products_stmt = $pdo->query("
        SELECT p.*, c.name as category_name 
        FROM products p 
        LEFT JOIN categories c ON p.category_id = c.id 
        ORDER BY p.id DESC 
        LIMIT 10
    ");
    $products = $products_stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<h3>üì¶ 10 s·∫£n ph·∫©m m·ªõi nh·∫•t:</h3>";
    if (empty($products)) {
        echo "<div style='background:#ffebee;padding:15px;border-radius:5px;'>";
        echo "‚ùå <strong>KH√îNG C√ì S·∫¢N PH·∫®M N√ÄO TRONG DATABASE!</strong><br>";
        echo "üëâ ƒê√¢y c√≥ th·ªÉ l√† nguy√™n nh√¢n t·∫°i sao customer kh√¥ng th·∫•y s·∫£n ph·∫©m<br>";
        echo "</div>";
    } else {
        echo "<table border='1' cellpadding='8' style='border-collapse:collapse; width:100%;'>";
        echo "<tr style='background:#f0f0f0;'>";
        echo "<th>ID</th><th>T√™n</th><th>SKU</th><th>Gi√°</th><th>Danh m·ª•c</th><th>Status</th><th>Ng√†y t·∫°o</th>";
        echo "</tr>";
        
        foreach ($products as $product) {
            $status_color = $product['status'] == 'active' ? 'green' : 'red';
            echo "<tr>";
            echo "<td>" . $product['id'] . "</td>";
            echo "<td>" . htmlspecialchars($product['name']) . "</td>";
            echo "<td>" . htmlspecialchars($product['sku']) . "</td>";
            echo "<td>" . number_format($product['price']) . "ƒë</td>";
            echo "<td>" . htmlspecialchars($product['category_name'] ?? 'N/A') . "</td>";
            echo "<td style='color:$status_color;'><strong>" . $product['status'] . "</strong></td>";
            echo "<td>" . $product['created_at'] . "</td>";
            echo "</tr>";
        }
        echo "</table><br>";
        
        // Th·ªëng k√™ theo status
        $status_stats = $pdo->query("
            SELECT status, COUNT(*) as count 
            FROM products 
            GROUP BY status
        ")->fetchAll(PDO::FETCH_ASSOC);
        
        echo "<h4>üìä Th·ªëng k√™ theo tr·∫°ng th√°i:</h4>";
        foreach ($status_stats as $stat) {
            $color = $stat['status'] == 'active' ? 'green' : 'orange';
            echo "<span style='color:$color;'><strong>" . $stat['status'] . ":</strong> " . $stat['count'] . " s·∫£n ph·∫©m</span><br>";
        }
    }
} catch (Exception $e) {
    echo "‚ùå <span style='color:red;'>L·ªói truy v·∫•n s·∫£n ph·∫©m: " . $e->getMessage() . "</span><br>";
}
echo "<hr>";

// 4. Ki·ªÉm tra file customer
echo "<h2>4. üë• KI·ªÇM TRA FILE CUSTOMER</h2>";
$customer_files = [
    'customer/index.php' => 'Trang ch·ªß customer',
    'customer/products.php' => 'Danh s√°ch s·∫£n ph·∫©m', 
    'customer/product_detail.php' => 'Chi ti·∫øt s·∫£n ph·∫©m'
];

foreach ($customer_files as $file => $desc) {
    if (file_exists($file)) {
        echo "‚úÖ <span style='color:green;'>$desc</span>: <code>$file</code> - EXISTS<br>";
        
        // Ki·ªÉm tra n·ªôi dung file c√≥ query s·∫£n ph·∫©m kh√¥ng
        $content = file_get_contents($file);
        if (strpos($content, 'SELECT') !== false && strpos($content, 'products') !== false) {
            echo "&nbsp;&nbsp;&nbsp;üìù File c√≥ ch·ª©a query s·∫£n ph·∫©m<br>";
        } else {
            echo "&nbsp;&nbsp;&nbsp;‚ö†Ô∏è <span style='color:orange;'>File KH√îNG c√≥ query s·∫£n ph·∫©m</span><br>";
        }
    } else {
        echo "‚ùå <span style='color:red;'>$desc</span>: <code>$file</code> - NOT FOUND<br>";
    }
}
echo "<hr>";

// 5. Test query t·ª´ customer
echo "<h2>5. üîç TEST QUERY T·ª™ CUSTOMER</h2>";
try {
    // Test query th√¥ng th∆∞·ªùng m√† customer s·∫Ω d√πng
    $customer_query = "
        SELECT p.*, c.name as category_name 
        FROM products p 
        LEFT JOIN categories c ON p.category_id = c.id 
        WHERE p.status = 'active' 
        ORDER BY p.created_at DESC 
        LIMIT 5
    ";
    
    $customer_stmt = $pdo->query($customer_query);
    $customer_products = $customer_stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<h3>üõí S·∫£n ph·∫©m customer s·∫Ω th·∫•y (status = 'active'):</h3>";
    if (empty($customer_products)) {
        echo "<div style='background:#ffebee;padding:15px;border-radius:5px;'>";
        echo "‚ùå <strong>KH√îNG C√ì S·∫¢N PH·∫®M ACTIVE N√ÄO!</strong><br>";
        echo "üëâ ƒê√¢y l√† nguy√™n nh√¢n customer kh√¥ng th·∫•y s·∫£n ph·∫©m<br>";
        echo "üëâ C·∫ßn thay ƒë·ªïi status s·∫£n ph·∫©m th√†nh 'active'<br>";
        echo "</div>";
    } else {
        echo "<ol>";
        foreach ($customer_products as $product) {
            echo "<li>";
            echo "<strong>" . htmlspecialchars($product['name']) . "</strong><br>";
            echo "&nbsp;&nbsp;SKU: " . $product['sku'] . " | ";
            echo "Gi√°: " . number_format($product['price']) . "ƒë | ";
            echo "Danh m·ª•c: " . ($product['category_name'] ?? 'N/A') . "<br>";
            echo "</li>";
        }
        echo "</ol>";
    }
} catch (Exception $e) {
    echo "‚ùå <span style='color:red;'>L·ªói test query customer: " . $e->getMessage() . "</span><br>";
}
echo "<hr>";

// 6. Ki·ªÉm tra ·∫£nh s·∫£n ph·∫©m
echo "<h2>6. üñºÔ∏è KI·ªÇM TRA ·∫¢NH S·∫¢N PH·∫®M</h2>";
$upload_dirs = [
    'uploads/products/' => 'Th∆∞ m·ª•c ·∫£nh s·∫£n ph·∫©m'
];

foreach ($upload_dirs as $dir => $desc) {
    echo "<h4>$desc: <code>$dir</code></h4>";
    if (is_dir($dir)) {
        echo "‚úÖ <span style='color:green;'>Th∆∞ m·ª•c t·ªìn t·∫°i</span><br>";
        echo "üìÅ Quy·ªÅn: " . substr(sprintf('%o', fileperms($dir)), -4) . "<br>";
        echo "‚úçÔ∏è C√≥ th·ªÉ ghi: " . (is_writable($dir) ? '‚úÖ YES' : '‚ùå NO') . "<br>";
        
        // ƒê·∫øm file ·∫£nh
        $files = glob($dir . "*.{jpg,jpeg,png,gif,webp}", GLOB_BRACE);
        echo "üñºÔ∏è S·ªë l∆∞·ª£ng ·∫£nh: " . count($files) . "<br>";
        
        if (count($files) > 0) {
            echo "üìã M·ªôt s·ªë file ·∫£nh:<br>";
            foreach (array_slice($files, 0, 5) as $file) {
                $size = filesize($file);
                echo "&nbsp;&nbsp;- " . basename($file) . " (" . round($size/1024, 1) . "KB)<br>";
            }
        }
    } else {
        echo "‚ùå <span style='color:red;'>Th∆∞ m·ª•c kh√¥ng t·ªìn t·∫°i</span><br>";
        echo "üëâ T·∫°o th∆∞ m·ª•c: ";
        if (mkdir($dir, 0755, true)) {
            echo "‚úÖ Th√†nh c√¥ng<br>";
        } else {
            echo "‚ùå Th·∫•t b·∫°i<br>";
        }
    }
    echo "<br>";
}
echo "<hr>";

// 7. Test t·∫°o s·∫£n ph·∫©m m·∫´u
echo "<h2>7. üß™ TEST T·∫†O S·∫¢N PH·∫®M M·∫™U</h2>";
try {
    // Ki·ªÉm tra c√≥ category n√†o kh√¥ng
    $cat_count = $pdo->query("SELECT COUNT(*) FROM categories WHERE status = 'active'")->fetchColumn();
    
    if ($cat_count == 0) {
        echo "‚ö†Ô∏è Kh√¥ng c√≥ category active, t·∫°o category m·∫´u...<br>";
        $pdo->exec("INSERT INTO categories (name, slug, status) VALUES ('Test Category', 'test-category', 'active')");
        echo "‚úÖ ƒê√£ t·∫°o category m·∫´u<br>";
    }
    
    // T·∫°o s·∫£n ph·∫©m test
    $test_sku = 'TEST_' . time();
    $insert_sql = "INSERT INTO products (name, sku, description, price, category_id, status, stock_quantity, created_at, updated_at) VALUES (?, ?, ?, ?, ?, 'active', 100, NOW(), NOW())";
    
    $stmt = $pdo->prepare($insert_sql);
    $result = $stmt->execute([
        'S·∫£n ph·∫©m test ' . date('H:i:s'),
        $test_sku,
        'M√¥ t·∫£ s·∫£n ph·∫©m test ƒë·ªÉ ki·ªÉm tra hi·ªÉn th·ªã',
        150000,
        1
    ]);
    
    if ($result) {
        $test_id = $pdo->lastInsertId();
        echo "‚úÖ <span style='color:green;'>T·∫°o s·∫£n ph·∫©m test th√†nh c√¥ng! ID: $test_id</span><br>";
        
        // Test query l·∫°i xem c√≥ hi·ªÉn th·ªã kh√¥ng
        $check_stmt = $pdo->prepare("SELECT * FROM products WHERE id = ? AND status = 'active'");
        $check_stmt->execute([$test_id]);
        $test_product = $check_stmt->fetch();
        
        if ($test_product) {
            echo "‚úÖ <span style='color:green;'>S·∫£n ph·∫©m test c√≥ th·ªÉ ƒë∆∞·ª£c query th√†nh c√¥ng</span><br>";
            echo "üì¶ T√™n: " . $test_product['name'] . "<br>";
            echo "üí∞ Gi√°: " . number_format($test_product['price']) . "ƒë<br>";
        } else {
            echo "‚ùå <span style='color:red;'>Kh√¥ng th·ªÉ query ƒë∆∞·ª£c s·∫£n ph·∫©m test</span><br>";
        }
        
        // Cleanup
        $pdo->prepare("DELETE FROM products WHERE id = ?")->execute([$test_id]);
        echo "üóëÔ∏è ƒê√£ x√≥a s·∫£n ph·∫©m test<br>";
        
    } else {
        echo "‚ùå <span style='color:red;'>Kh√¥ng th·ªÉ t·∫°o s·∫£n ph·∫©m test</span><br>";
    }
    
} catch (Exception $e) {
    echo "‚ùå <span style='color:red;'>L·ªói test t·∫°o s·∫£n ph·∫©m: " . $e->getMessage() . "</span><br>";
}
echo "<hr>";

// 8. Ki·ªÉm tra session v√† authentication
echo "<h2>8. üîê KI·ªÇM TRA SESSION & AUTH</h2>";
session_start();
echo "üÜî Session ID: " . session_id() . "<br>";
echo "üë§ Admin ID: " . ($_SESSION['admin_id'] ?? 'CH∆ØA LOGIN') . "<br>";
echo "üë• User ID: " . ($_SESSION['user_id'] ?? 'CH∆ØA LOGIN') . "<br>";
echo "üïí Session start time: " . ($_SESSION['start_time'] ?? 'N/A') . "<br>";
echo "<hr>";

// 9. K·∫æT LU·∫¨N V√Ä KHUY·∫æN NGH·ªä
echo "<h2>üéØ K·∫æT LU·∫¨N & KHUY·∫æN NGH·ªä</h2>";

$issues = [];
$recommendations = [];

// Ki·ªÉm tra c√°c v·∫•n ƒë·ªÅ
if (empty($products)) {
    $issues[] = "‚ùå Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o trong database";
    $recommendations[] = "üëâ Th√™m s·∫£n ph·∫©m qua admin/products/add.php";
}

if (!empty($products)) {
    $active_count = 0;
    foreach ($products as $p) {
        if ($p['status'] == 'active') $active_count++;
    }
    if ($active_count == 0) {
        $issues[] = "‚ùå Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o c√≥ status = 'active'";
        $recommendations[] = "üëâ Thay ƒë·ªïi status s·∫£n ph·∫©m th√†nh 'active' trong admin";
    }
}

if (!file_exists('customer/products.php')) {
    $issues[] = "‚ùå Thi·∫øu file customer/products.php";
    $recommendations[] = "üëâ T·∫°o file hi·ªÉn th·ªã s·∫£n ph·∫©m cho customer";
}

if (!is_dir('uploads/products/')) {
    $issues[] = "‚ùå Thi·∫øu th∆∞ m·ª•c uploads/products/";
    $recommendations[] = "üëâ T·∫°o th∆∞ m·ª•c uploads v√† set quy·ªÅn 755";
}

// Hi·ªÉn th·ªã k·∫øt qu·∫£
if (empty($issues)) {
    echo "<div style='background:#e8f5e8;border:1px solid #4caf50;padding:15px;border-radius:8px;'>";
    echo "<h3 style='color:#2e7d32;margin-top:0;'>‚úÖ H·ªÜ TH·ªêNG HO·∫†T ƒê·ªòNG B√åNH TH∆Ø·ªúNG</h3>";
    echo "<p>T·∫•t c·∫£ c√°c th√†nh ph·∫ßn ƒë·ªÅu OK. S·∫£n ph·∫©m c√≥ th·ªÉ hi·ªÉn th·ªã ·ªü customer.</p>";
    echo "<p><strong>B∆∞·ªõc ti·∫øp theo:</strong> Ki·ªÉm tra file customer/products.php c√≥ query ƒë√∫ng kh√¥ng.</p>";
    echo "</div>";
} else {
    echo "<div style='background:#ffebee;border:1px solid #f44336;padding:15px;border-radius:8px;'>";
    echo "<h3 style='color:#c62828;margin-top:0;'>‚ùå PH√ÅT HI·ªÜN C√ÅC V·∫§N ƒê·ªÄ</h3>";
    echo "<h4>üêõ V·∫•n ƒë·ªÅ:</h4>";
    foreach ($issues as $issue) {
        echo "<p>$issue</p>";
    }
    echo "<h4>üí° Khuy·∫øn ngh·ªã:</h4>";
    foreach ($recommendations as $rec) {
        echo "<p>$rec</p>";
    }
    echo "</div>";
}

echo "<br><p><strong>‚è∞ Ho√†n th√†nh l√∫c:</strong> " . date('Y-m-d H:i:s') . "</p>";
?>

<style>
body { 
    font-family: Arial, sans-serif; 
    margin: 20px; 
    line-height: 1.6;
}
h1, h2, h3 { color: #333; }
hr { border: 1px solid #ddd; margin: 20px 0; }
table { width: 100%; margin: 10px 0; }
th { background: #f5f5f5; }
code { 
    background: #f0f0f0; 
    padding: 2px 6px; 
    border-radius: 3px; 
    font-family: monospace;
}
.success { color: #4caf50; }
.error { color: #f44336; }
.warning { color: #ff9800; }
</style>